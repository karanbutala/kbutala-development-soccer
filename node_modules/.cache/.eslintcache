[{"/Users/karanbutala/Documents/PROJECTS/AWS/Soccer Web App/kbutala-development-soccer/src/index.js":"1","/Users/karanbutala/Documents/PROJECTS/AWS/Soccer Web App/kbutala-development-soccer/src/App.js":"2","/Users/karanbutala/Documents/PROJECTS/AWS/Soccer Web App/kbutala-development-soccer/src/reportWebVitals.js":"3","/Users/karanbutala/Documents/PROJECTS/AWS/Soccer Web App/kbutala-development-soccer/src/aws-exports.js":"4","/Users/karanbutala/Documents/PROJECTS/AWS/Soccer Web App/kbutala-development-soccer/src/graphql/mutations.js":"5","/Users/karanbutala/Documents/PROJECTS/AWS/Soccer Web App/kbutala-development-soccer/src/graphql/queries.js":"6"},{"size":638,"mtime":1696176016087,"results":"7","hashOfConfig":"8"},{"size":7548,"mtime":1696212087290,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1696175103707,"results":"11","hashOfConfig":"8"},{"size":1177,"mtime":1696193130124,"results":"12","hashOfConfig":"10"},{"size":4921,"mtime":1696193119896,"results":"13","hashOfConfig":"10"},{"size":3846,"mtime":1696193119895,"results":"14","hashOfConfig":"10"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"167jiqh",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},"coe8ct",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/karanbutala/Documents/PROJECTS/AWS/Soccer Web App/kbutala-development-soccer/src/index.js",[],[],"/Users/karanbutala/Documents/PROJECTS/AWS/Soccer Web App/kbutala-development-soccer/src/App.js",["35","36","37"],[],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport \"@aws-amplify/ui-react/styles.css\";\nimport { API } from \"aws-amplify\";\nimport {\n  Button,\n  Flex,\n  Heading,\n  Text,\n  Label,\n  withAuthenticator,\n  View,\n  TextField,\n  Table,\n  TableCell,\n  TableBody,\n  TableHead,\n  TableRow,\n} from \"@aws-amplify/ui-react\";\nimport { listAttendees, listGames } from \"./graphql/queries\";\nimport {\n  createAttendees as createAttendeesMutation,\n  createAttendeesGames as createAttendeesGamesMutation\n} from \"./graphql/mutations\";\n\nconst App = () => {\n  const [attendees, setAttendees] = useState([]);\n\n  useEffect(() => {\n    fetchAttendees();\n  }, []);\n\n  const [games, setGames] = useState([]);\n\n  useEffect(() => {\n    fetchGames();\n  }, []);\n\n  async function fetchAttendees() {\n  const apiData = await API.graphql({ query: listAttendees });\n  const attendeesFromAPI = apiData.data.listAttendees.items;\n  setAttendees(attendeesFromAPI);\n  }\n\n  async function fetchGames() {\n  const apiData = await API.graphql({ query: listGames });\n  const gamesFromAPI = apiData.data.listGames.items;\n  setGames(gamesFromAPI);\n  }\n\n  async function createAttendees(event) {\n    event.preventDefault();\n    const form = new FormData(event.target);\n    const data = {\n      attendeeNo: attendees.length+1,\n      attendeeFirstName: form.get(\"fname\"),\n      attendeeLastName: form.get(\"lname\"),\n      attendeeContact: form.get(\"contact\"),\n      registrationTimestamp: Date.now(),\n    };\n    await API.graphql({\n      query: createAttendeesMutation,\n      variables: { input: data },\n    });\n    fetchAttendees();\n    event.target.reset();\n    setTimeout(() => createAttendeesGames(), 4000);\n  }\n\n  async function createAttendeesGames() {\n    const game_data = {\n    attendeesId: attendees.find((element) => element.attendeeNo === attendees.length+1).id,\n    gamesId: games.find((element) => new Date(element.gameTimestamp * 1000) > Date.now()).id,\n    };\n    await API.graphql({\n      query: createAttendeesGamesMutation,\n      variables: { input: game_data },\n    });\n  }\n\n  return (\n    <View className=\"App\">\n      <Heading level={1}>Soccer Registration</Heading>\n      <br />\n      <hr />\n      <Heading level={2}>Game Details</Heading>\n      <br/>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell as=\"th\">\n                Name\n              </TableCell>\n              <TableCell as=\"th\">\n                Location\n              </TableCell>\n              <TableCell as=\"th\">\n                Players\n              </TableCell>\n              <TableCell as=\"th\">\n                Date and Time\n              </TableCell>\n            </TableRow>\n          </TableHead>\n      {games.filter((game) => new Date(game.gameTimestamp * 1000) > Date.now()).map((game) => (\n      <TableBody>\n        <TableRow\n          key={game.id || game.gameTimestamp}\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <TableCell>\n            {game.gameName}\n          </TableCell>\n          <TableCell>\n            {game.gameLocation}\n          </TableCell>\n          <TableCell>\n            {game.gamePlayersCount}\n          </TableCell>\n          <TableCell>\n            {new Date(game.gameTimestamp * 1000).toLocaleString()}\n          </TableCell>\n        </TableRow>\n      </TableBody>\n      ))}\n      </Table>\n      <br />\n      <Heading level={2}>Register</Heading>\n      <View as=\"form\" margin=\"3rem 0\" onSubmit={createAttendees}>\n        <Flex direction=\"row\" justifyContent=\"center\">\n          <TextField\n            name=\"fname\"\n            placeholder=\"First Name\"\n            label=\"First Name\"\n            labelHidden\n            variation=\"quiet\"\n            required\n          />\n          <TextField\n            name=\"lname\"\n            placeholder=\"Last Name\"\n            label=\"Last Name\"\n            labelHidden\n            variation=\"quiet\"\n            required\n          />\n          <TextField\n            name=\"contact\"\n            placeholder=\"Contact\"\n            label=\"Contact\"\n            labelHidden\n            variation=\"quiet\"\n            required\n          />\n          <Button type=\"submit\" variation=\"primary\">\n            Shoot\n          </Button>\n        </Flex>\n      </View>\n      <Heading level={2}>Current Attendees</Heading>\n      <View margin=\"3rem 0\">\n      <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell as=\"th\">\n                No\n              </TableCell>\n              <TableCell as=\"th\">\n                First Name\n              </TableCell>\n              <TableCell as=\"th\">\n                Last Name\n              </TableCell>\n              <TableCell as=\"th\">\n                Contact\n              </TableCell>\n              <TableCell as=\"th\">\n                Registration Time\n              </TableCell>\n            </TableRow>\n          </TableHead>\n        {attendees.toSorted((a,b) => a.attendeeNo - b.attendeeNo).filter((attendee) => attendee.attendeeNo <= games[0].gamePlayersCount).map((attendee) => (\n          <TableBody>\n          <TableRow\n            key={attendee.id || attendee.attendeeTimestamp}\n            direction=\"row\"\n            justifyContent=\"left\"\n            alignItems=\"left\"\n          >\n                <TableCell>\n                  {attendee.attendeeNo}\n                </TableCell>\n                <TableCell>\n                  {attendee.attendeeFirstName}\n                </TableCell>\n                <TableCell>\n                  {attendee.attendeeLastName}\n                </TableCell>\n                <TableCell>\n                  {attendee.attendeeContact}\n                </TableCell>\n                <TableCell>\n                  {new Date(attendee.registrationTimestamp).toLocaleString()}\n                </TableCell>\n              </TableRow>\n            </TableBody>\n      ))}\n      </Table>\n      </View>\n      <Heading level={2}>Waitlist</Heading>\n      <View margin=\"3rem 0\">\n      <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell as=\"th\">\n                No\n              </TableCell>\n              <TableCell as=\"th\">\n                First Name\n              </TableCell>\n              <TableCell as=\"th\">\n                Last Name\n              </TableCell>\n              <TableCell as=\"th\">\n                Contact\n              </TableCell>\n              <TableCell as=\"th\">\n                Registration Time\n              </TableCell>\n            </TableRow>\n          </TableHead>\n        {attendees.toSorted((a,b) => a.attendeeNo - b.attendeeNo).filter((attendee) => attendee.attendeeNo > games[0].gamePlayersCount).map((attendee) => (\n          <TableBody>\n          <TableRow\n            key={attendee.id || attendee.attendeeTimestamp}\n            direction=\"row\"\n            justifyContent=\"left\"\n            alignItems=\"left\"\n          >\n                <TableCell>\n                  {attendee.attendeeNo}\n                </TableCell>\n                <TableCell>\n                  {attendee.attendeeFirstName}\n                </TableCell>\n                <TableCell>\n                  {attendee.attendeeLastName}\n                </TableCell>\n                <TableCell>\n                  {attendee.attendeeContact}\n                </TableCell>\n                <TableCell>\n                  {new Date(attendee.registrationTimestamp).toLocaleString()}\n                </TableCell>\n              </TableRow>\n            </TableBody>\n      ))}\n      </Table>\n      </View>\n    </View>\n  );\n}\n\nexport default App;","/Users/karanbutala/Documents/PROJECTS/AWS/Soccer Web App/kbutala-development-soccer/src/reportWebVitals.js",[],[],["38"],"/Users/karanbutala/Documents/PROJECTS/AWS/Soccer Web App/kbutala-development-soccer/src/aws-exports.js",[],[],"/Users/karanbutala/Documents/PROJECTS/AWS/Soccer Web App/kbutala-development-soccer/src/graphql/mutations.js",[],[],"/Users/karanbutala/Documents/PROJECTS/AWS/Soccer Web App/kbutala-development-soccer/src/graphql/queries.js",[],[],{"ruleId":"39","severity":1,"message":"40","line":9,"column":3,"nodeType":"41","messageId":"42","endLine":9,"endColumn":7},{"ruleId":"39","severity":1,"message":"43","line":10,"column":3,"nodeType":"41","messageId":"42","endLine":10,"endColumn":8},{"ruleId":"39","severity":1,"message":"44","line":11,"column":3,"nodeType":"41","messageId":"42","endLine":11,"endColumn":20},{"ruleId":"45","replacedBy":"46"},"no-unused-vars","'Text' is defined but never used.","Identifier","unusedVar","'Label' is defined but never used.","'withAuthenticator' is defined but never used.","no-new-object",["47"],"no-object-constructor"]